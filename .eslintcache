[{"/Users/user/my-project/myapp-vite/src/pages/Page1/PageForm.tsx":"1"},{"size":2400,"mtime":1646815504474,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","suppressedMessages":"6","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"f6tpql","/Users/user/my-project/myapp-vite/src/pages/Page1/PageForm.tsx",["7"],[],{"ruleId":"8","severity":1,"message":"9","line":32,"column":29,"nodeType":"10","messageId":"11","endLine":32,"endColumn":32,"suggestions":"12"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["13","14"],{"messageId":"15","fix":"16","desc":"17"},{"messageId":"18","fix":"19","desc":"20"},"suggestUnknown",{"range":"21","text":"22"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"21","text":"23"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[745,748],"unknown","never"]